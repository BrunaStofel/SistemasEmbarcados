

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed May 13 13:31:03 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     	;# 
    26  0001                     	;# 
    27  0002                     	;# 
    28  0003                     	;# 
    29  0004                     	;# 
    30  0005                     	;# 
    31  0006                     	;# 
    32  0007                     	;# 
    33  0008                     	;# 
    34  0009                     	;# 
    35  000A                     	;# 
    36  000B                     	;# 
    37  000C                     	;# 
    38  000D                     	;# 
    39  000E                     	;# 
    40  000E                     	;# 
    41  000F                     	;# 
    42  0010                     	;# 
    43  0011                     	;# 
    44  0012                     	;# 
    45  0013                     	;# 
    46  0014                     	;# 
    47  0015                     	;# 
    48  0015                     	;# 
    49  0016                     	;# 
    50  0017                     	;# 
    51  0018                     	;# 
    52  0019                     	;# 
    53  001A                     	;# 
    54  001B                     	;# 
    55  001B                     	;# 
    56  001C                     	;# 
    57  001D                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  0081                     	;# 
    61  0085                     	;# 
    62  0086                     	;# 
    63  0087                     	;# 
    64  0088                     	;# 
    65  0089                     	;# 
    66  008C                     	;# 
    67  008D                     	;# 
    68  008E                     	;# 
    69  0091                     	;# 
    70  0092                     	;# 
    71  0093                     	;# 
    72  0094                     	;# 
    73  0098                     	;# 
    74  0099                     	;# 
    75  009C                     	;# 
    76  009D                     	;# 
    77  009E                     	;# 
    78  009F                     	;# 
    79  010C                     	;# 
    80  010D                     	;# 
    81  010E                     	;# 
    82  010F                     	;# 
    83  018C                     	;# 
    84  018D                     	;# 
    85                           
    86                           	psect	idataBANK0
    87  02AE                     __pidataBANK0:	
    88                           
    89                           ;initializer for _resp
    90  02AE  3423               	retlw	35
    91  000E                     _TMR1	set	14
    92  001F                     _ADCON0bits	set	31
    93  001E                     _ADRESH	set	30
    94  000B                     _INTCONbits	set	11
    95  000C                     _PIR1bits	set	12
    96  0005                     _PORTA	set	5
    97  0006                     _PORTB	set	6
    98  0006                     _PORTBbits	set	6
    99  0007                     _PORTC	set	7
   100  0008                     _PORTD	set	8
   101  0009                     _PORTE	set	9
   102  001A                     _RCREG	set	26
   103  0018                     _RCSTAbits	set	24
   104  0010                     _T1CONbits	set	16
   105  0019                     _TXREG	set	25
   106  00C1                     _OERR	set	193
   107  009F                     _ADCON1bits	set	159
   108  009E                     _ADRESL	set	158
   109  008C                     _PIE1bits	set	140
   110  0099                     _SPBRG	set	153
   111  0085                     _TRISA	set	133
   112  0086                     _TRISB	set	134
   113  0087                     _TRISC	set	135
   114  0088                     _TRISD	set	136
   115  0089                     _TRISE	set	137
   116  0098                     _TXSTAbits	set	152
   117                           
   118                           	psect	strings
   119  0200                     __pstrings:	
   120  0200                     stringtab:	
   121  0200                     __stringtab:	
   122  0200                     stringcode:	
   123                           ;	String table - string pointers are 1 byte each
   124                           
   125  0200                     stringdir:	
   126  0200  3002               	movlw	high stringdir
   127  0201  008A               	movwf	10
   128  0202  0804               	movf	4,w
   129  0203  0A84               	incf	4,f
   130  0204  0782               	addwf	2,f
   131  0205                     __stringbase:	
   132  0205  3400               	retlw	0
   133  0206                     __end_of__stringtab:	
   134  0206                     __stringdata:	
   135  0206                     STR_1:	
   136  0206  340A               	retlw	10
   137  0207  340D               	retlw	13
   138  0208  3420               	retlw	32	;' '
   139  0209  342D               	retlw	45	;'-'
   140  020A  342D               	retlw	45	;'-'
   141  020B  342D               	retlw	45	;'-'
   142  020C  342D               	retlw	45	;'-'
   143  020D  342D               	retlw	45	;'-'
   144  020E  342D               	retlw	45	;'-'
   145  020F  342D               	retlw	45	;'-'
   146  0210  3420               	retlw	32	;' '
   147  0211  3445               	retlw	69	;'E'
   148  0212  3453               	retlw	83	;'S'
   149  0213  3454               	retlw	84	;'T'
   150  0214  344F               	retlw	79	;'O'
   151  0215  3455               	retlw	85	;'U'
   152  0216  3452               	retlw	82	;'R'
   153  0217  344F               	retlw	79	;'O'
   154  0218  3420               	retlw	32	;' '
   155  0219  3444               	retlw	68	;'D'
   156  021A  3445               	retlw	69	;'E'
   157  021B  3420               	retlw	32	;' '
   158  021C  3450               	retlw	80	;'P'
   159  021D  3449               	retlw	73	;'I'
   160  021E  344C               	retlw	76	;'L'
   161  021F  3448               	retlw	72	;'H'
   162  0220  3441               	retlw	65	;'A'
   163  0221  3420               	retlw	32	;' '
   164  0222  342D               	retlw	45	;'-'
   165  0223  342D               	retlw	45	;'-'
   166  0224  342D               	retlw	45	;'-'
   167  0225  342D               	retlw	45	;'-'
   168  0226  342D               	retlw	45	;'-'
   169  0227  342D               	retlw	45	;'-'
   170  0228  342D               	retlw	45	;'-'
   171  0229  3420               	retlw	32	;' '
   172  022A  340A               	retlw	10
   173  022B  340D               	retlw	13
   174  022C  3420               	retlw	32	;' '
   175  022D  3400               	retlw	0
   176  022E                     __end_of__stringdata:	
   177                           
   178                           ; #config settings
   179  0000                     
   180                           	psect	cinit
   181  0015                     start_initialization:	
   182  0015                     __initialization:	
   183                           
   184                           ; Clear objects allocated to COMMON
   185  0015  01FC               	clrf	__pbssCOMMON& (0+127)
   186  0016  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   187                           
   188                           ; Clear objects allocated to BANK0
   189  0017  1383               	bcf	3,7	;select IRP bank0
   190  0018  303C               	movlw	low __pbssBANK0
   191  0019  0084               	movwf	4
   192  001A  3054               	movlw	low (__pbssBANK0+24)
   193  001B  120A  118A  229E  120A  118A  	fcall	clear_ram0
   194                           
   195                           ; Initialize objects allocated to BANK0
   196  0020  120A  118A  22AE   	fcall	__pidataBANK0	;fetch initializer
   197  0023  00D4               	movwf	__pdataBANK0& (0+127)
   198  0024                     end_of_initialization:	
   199                           ;End of C runtime variable initialization code
   200                           
   201  0024                     __end_of__initialization:	
   202  0024  0183               	clrf	3
   203  0025  120A  118A  2948   	ljmp	_main	;jump to C main() function
   204                           
   205                           	psect	bssCOMMON
   206  007C                     __pbssCOMMON:	
   207  007C                     _HIGH:	
   208  007C                     	ds	1
   209  007D                     _LOW:	
   210  007D                     	ds	1
   211                           
   212                           	psect	bssBANK0
   213  003C                     __pbssBANK0:	
   214  003C                     _buffer:	
   215  003C                     	ds	6
   216  0042                     _ADC_Buffer:	
   217  0042                     	ds	4
   218  0046                     _input:	
   219  0046                     	ds	3
   220  0049                     _ADCResult:	
   221  0049                     	ds	2
   222  004B                     _ativa:	
   223  004B                     	ds	2
   224  004D                     _cont1:	
   225  004D                     	ds	2
   226  004F                     _sec:	
   227  004F                     	ds	2
   228  0051                     _status:	
   229  0051                     	ds	2
   230  0053                     _Display:	
   231  0053                     	ds	1
   232                           
   233                           	psect	dataBANK0
   234  0054                     __pdataBANK0:	
   235  0054                     _resp:	
   236  0054                     	ds	1
   237                           
   238                           	psect	clrtext
   239  029E                     clear_ram0:	
   240                           ;	Called with FSR containing the base address, and
   241                           ;	W with the last address+1
   242                           
   243  029E  0064               	clrwdt	;clear the watchdog before getting into this loop
   244  029F                     clrloop0:	
   245  029F  0180               	clrf	0	;clear RAM location pointed to by FSR
   246  02A0  0A84               	incf	4,f	;increment pointer
   247  02A1  0604               	xorwf	4,w	;XOR with final address
   248  02A2  1903               	btfsc	3,2	;have we reached the end yet?
   249  02A3  3400               	retlw	0	;all done for this memory range, return
   250  02A4  0604               	xorwf	4,w	;XOR again to restore value
   251  02A5  2A9F               	goto	clrloop0	;do the next byte
   252                           
   253                           	psect	cstackCOMMON
   254  0070                     __pcstackCOMMON:	
   255  0070                     ?_USART_WriteChar:	
   256  0070                     ??_USART_WriteChar:	
   257                           ; 0 bytes @ 0x0
   258                           
   259  0070                     ?_USART_WriteString:	
   260                           ; 0 bytes @ 0x0
   261                           
   262  0070                     ?_ADC_Init:	
   263                           ; 0 bytes @ 0x0
   264                           
   265  0070                     ?_ADC_Read:	
   266                           ; 0 bytes @ 0x0
   267                           
   268  0070                     ?_TIMER1_Init:	
   269                           ; 0 bytes @ 0x0
   270                           
   271  0070                     ?_ISR:	
   272                           ; 0 bytes @ 0x0
   273                           
   274  0070                     ?_main:	
   275                           ; 0 bytes @ 0x0
   276                           
   277  0070                     ?_USART_ReceiveChar:	
   278                           ; 0 bytes @ 0x0
   279                           
   280  0070                     USART_WriteChar@USARTData:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ADC_Read@channel:	
   284                           ; 1 bytes @ 0x0
   285                           
   286                           
   287                           ; 2 bytes @ 0x0
   288  0070                     	ds	1
   289  0071                     ??_USART_WriteString:	
   290                           
   291                           ; 0 bytes @ 0x1
   292  0071                     	ds	1
   293  0072                     ??_ADC_Read:	
   294  0072                     USART_WriteString@str:	
   295                           ; 0 bytes @ 0x2
   296                           
   297                           
   298                           ; 1 bytes @ 0x2
   299  0072                     	ds	1
   300  0073                     ??_USART_ReceiveChar:	
   301                           
   302                           ; 0 bytes @ 0x3
   303  0073                     	ds	1
   304  0074                     USART_ReceiveChar@USART_Data:	
   305                           
   306                           ; 1 bytes @ 0x4
   307  0074                     	ds	1
   308  0075                     ??_ISR:	
   309                           
   310                           ; 0 bytes @ 0x5
   311  0075                     	ds	5
   312  007A                     ISR@checksum:	
   313                           
   314                           ; 1 bytes @ 0xA
   315  007A                     	ds	1
   316  007B                     ISR@index:	
   317                           
   318                           ; 1 bytes @ 0xB
   319  007B                     	ds	1
   320                           
   321                           	psect	cstackBANK0
   322  0020                     __pcstackBANK0:	
   323  0020                     ??_ADC_Init:	
   324  0020                     ??_TIMER1_Init:	
   325                           ; 0 bytes @ 0x0
   326                           
   327  0020                     ?___aldiv:	
   328                           ; 0 bytes @ 0x0
   329                           
   330  0020                     ___aldiv@divisor:	
   331                           ; 4 bytes @ 0x0
   332                           
   333                           
   334                           ; 4 bytes @ 0x0
   335  0020                     	ds	4
   336  0024                     ___aldiv@dividend:	
   337                           
   338                           ; 4 bytes @ 0x4
   339  0024                     	ds	4
   340  0028                     ??___aldiv:	
   341                           
   342                           ; 0 bytes @ 0x8
   343  0028                     	ds	1
   344  0029                     ___aldiv@counter:	
   345                           
   346                           ; 1 bytes @ 0x9
   347  0029                     	ds	1
   348  002A                     ___aldiv@sign:	
   349                           
   350                           ; 1 bytes @ 0xA
   351  002A                     	ds	1
   352  002B                     ___aldiv@quotient:	
   353                           
   354                           ; 4 bytes @ 0xB
   355  002B                     	ds	4
   356  002F                     ?_USART_Init:	
   357  002F                     USART_Init@BaudRate:	
   358                           ; 0 bytes @ 0xF
   359                           
   360                           
   361                           ; 4 bytes @ 0xF
   362  002F                     	ds	4
   363  0033                     ??_USART_Init:	
   364                           
   365                           ; 0 bytes @ 0x13
   366  0033                     	ds	5
   367  0038                     USART_Init@BR:	
   368                           
   369                           ; 1 bytes @ 0x18
   370  0038                     	ds	1
   371  0039                     ??_main:	
   372                           
   373                           ; 0 bytes @ 0x19
   374  0039                     	ds	3
   375                           
   376                           	psect	maintext
   377  0148                     __pmaintext:	
   378 ;;
   379 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   380 ;;
   381 ;; *************** function _main *****************
   382 ;; Defined at:
   383 ;;		line 224 in file "C:\Users\Dracarys\Documents\GitHub\SistemaEmbarcado_projeto_final\SistemasEmbarcados\Firmware no P
      +IC16F877A\Supervisorio.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;		None               void
   390 ;; Registers used:
   391 ;;		wreg, status,2, status,0, pclath, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : 17F/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   397 ;;      Params:         0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0
   399 ;;      Temps:          0       3       0       0       0
   400 ;;      Totals:         0       3       0       0       0
   401 ;;Total ram usage:        3 bytes
   402 ;; Hardware stack levels required when called:    6
   403 ;; This function calls:
   404 ;;		_ADC_Init
   405 ;;		_TIMER1_Init
   406 ;;		_USART_Init
   407 ;; This function is called by:
   408 ;;		Startup code after reset
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           
   413                           ;psect for function _main
   414  0148                     _main:	
   415                           
   416                           ;Supervisorio.c: 226: TRISA = 0b00000001;
   417                           
   418                           ;incstack = 0
   419                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   420  0148  3001               	movlw	1
   421  0149  1683               	bsf	3,5	;RP0=1, select bank1
   422  014A  1303               	bcf	3,6	;RP1=0, select bank1
   423  014B  0085               	movwf	5	;volatile
   424                           
   425                           ;Supervisorio.c: 227: PORTA = 0b00000001;
   426  014C  3001               	movlw	1
   427  014D  1283               	bcf	3,5	;RP0=0, select bank0
   428  014E  1303               	bcf	3,6	;RP1=0, select bank0
   429  014F  0085               	movwf	5	;volatile
   430                           
   431                           ;Supervisorio.c: 228: TRISB = 0b00000000;
   432  0150  1683               	bsf	3,5	;RP0=1, select bank1
   433  0151  1303               	bcf	3,6	;RP1=0, select bank1
   434  0152  0186               	clrf	6	;volatile
   435                           
   436                           ;Supervisorio.c: 229: PORTB = 0b00000000;
   437  0153  1283               	bcf	3,5	;RP0=0, select bank0
   438  0154  1303               	bcf	3,6	;RP1=0, select bank0
   439  0155  0186               	clrf	6	;volatile
   440                           
   441                           ;Supervisorio.c: 230: TRISC = 0b10000000;
   442  0156  3080               	movlw	128
   443  0157  1683               	bsf	3,5	;RP0=1, select bank1
   444  0158  1303               	bcf	3,6	;RP1=0, select bank1
   445  0159  0087               	movwf	7	;volatile
   446                           
   447                           ;Supervisorio.c: 231: PORTC = 0b11000000;
   448  015A  30C0               	movlw	192
   449  015B  1283               	bcf	3,5	;RP0=0, select bank0
   450  015C  1303               	bcf	3,6	;RP1=0, select bank0
   451  015D  0087               	movwf	7	;volatile
   452                           
   453                           ;Supervisorio.c: 232: TRISD = 0b00000000;
   454  015E  1683               	bsf	3,5	;RP0=1, select bank1
   455  015F  1303               	bcf	3,6	;RP1=0, select bank1
   456  0160  0188               	clrf	8	;volatile
   457                           
   458                           ;Supervisorio.c: 233: PORTD = 0b00000000;
   459  0161  1283               	bcf	3,5	;RP0=0, select bank0
   460  0162  1303               	bcf	3,6	;RP1=0, select bank0
   461  0163  0188               	clrf	8	;volatile
   462                           
   463                           ;Supervisorio.c: 234: TRISE = 0b00000111;
   464  0164  3007               	movlw	7
   465  0165  1683               	bsf	3,5	;RP0=1, select bank1
   466  0166  1303               	bcf	3,6	;RP1=0, select bank1
   467  0167  0089               	movwf	9	;volatile
   468                           
   469                           ;Supervisorio.c: 235: PORTE = 0b00000111;
   470  0168  3007               	movlw	7
   471  0169  1283               	bcf	3,5	;RP0=0, select bank0
   472  016A  1303               	bcf	3,6	;RP1=0, select bank0
   473  016B  0089               	movwf	9	;volatile
   474                           
   475                           ;Supervisorio.c: 237: USART_Init(115200);
   476  016C  3000               	movlw	0
   477  016D  00B2               	movwf	USART_Init@BaudRate+3
   478  016E  3001               	movlw	1
   479  016F  00B1               	movwf	USART_Init@BaudRate+2
   480  0170  30C2               	movlw	194
   481  0171  00B0               	movwf	USART_Init@BaudRate+1
   482  0172  3000               	movlw	0
   483  0173  00AF               	movwf	USART_Init@BaudRate
   484  0174  120A  118A  2195  120A  118A  	fcall	_USART_Init
   485                           
   486                           ;Supervisorio.c: 238: ADC_Init();
   487  0179  120A  118A  227C  120A  118A  	fcall	_ADC_Init
   488                           
   489                           ;Supervisorio.c: 240: INTCONbits.PEIE = 1;
   490  017E  170B               	bsf	11,6	;volatile
   491                           
   492                           ;Supervisorio.c: 241: INTCONbits.GIE = 1;
   493  017F  178B               	bsf	11,7	;volatile
   494                           
   495                           ;Supervisorio.c: 242: _delay((unsigned long)((400)*(18432000/4000.0)));
   496  0180  300A               	movlw	10
   497  0181  1283               	bcf	3,5	;RP0=0, select bank0
   498  0182  1303               	bcf	3,6	;RP1=0, select bank0
   499  0183  00BB               	movwf	??_main+2
   500  0184  305A               	movlw	90
   501  0185  00BA               	movwf	??_main+1
   502  0186  30C3               	movlw	195
   503  0187  00B9               	movwf	??_main
   504  0188                     u437:	
   505  0188  0BB9               	decfsz	??_main,f
   506  0189  2988               	goto	u437
   507  018A  0BBA               	decfsz	??_main+1,f
   508  018B  2988               	goto	u437
   509  018C  0BBB               	decfsz	??_main+2,f
   510  018D  2988               	goto	u437
   511  018E  298F               	nop2
   512                           
   513                           ;Supervisorio.c: 243: TIMER1_Init();
   514  018F  120A  118A  228E  120A  118A  	fcall	_TIMER1_Init
   515  0194                     l125:	
   516                           ;Supervisorio.c: 246: while(1)
   517                           
   518                           
   519                           ;Supervisorio.c: 247: {
   520  0194  2994               	goto	l125
   521  0195                     __end_of_main:	
   522                           
   523                           	psect	text1
   524  0195                     __ptext1:	
   525 ;; *************** function _USART_Init *****************
   526 ;; Defined at:
   527 ;;		line 34 in file "C:\Users\Dracarys\Documents\GitHub\SistemaEmbarcado_projeto_final\SistemasEmbarcados\Firmware no PI
      +C16F877A\Supervisorio.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;  BaudRate        4   15[BANK0 ] long 
   530 ;; Auto vars:     Size  Location     Type
   531 ;;  BR              1   24[BANK0 ] unsigned char 
   532 ;; Return value:  Size  Location     Type
   533 ;;		None               void
   534 ;; Registers used:
   535 ;;		wreg, status,2, status,0, pclath, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   541 ;;      Params:         0       4       0       0       0
   542 ;;      Locals:         0       1       0       0       0
   543 ;;      Temps:          0       5       0       0       0
   544 ;;      Totals:         0      10       0       0       0
   545 ;;Total ram usage:       10 bytes
   546 ;; Hardware stack levels used:    1
   547 ;; Hardware stack levels required when called:    5
   548 ;; This function calls:
   549 ;;		___aldiv
   550 ;; This function is called by:
   551 ;;		_main
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           
   556                           ;psect for function _USART_Init
   557  0195                     _USART_Init:	
   558                           
   559                           ;Supervisorio.c: 40: unsigned char BR = 0;
   560                           
   561                           ;incstack = 0
   562                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
   563  0195  1283               	bcf	3,5	;RP0=0, select bank0
   564  0196  1303               	bcf	3,6	;RP1=0, select bank0
   565  0197  01B8               	clrf	USART_Init@BR
   566                           
   567                           ;Supervisorio.c: 43: BR = (18432000 / (16 * BaudRate)) - 1;
   568  0198  082F               	movf	USART_Init@BaudRate,w
   569  0199  00B3               	movwf	??_USART_Init
   570  019A  0830               	movf	USART_Init@BaudRate+1,w
   571  019B  00B4               	movwf	??_USART_Init+1
   572  019C  0831               	movf	USART_Init@BaudRate+2,w
   573  019D  00B5               	movwf	??_USART_Init+2
   574  019E  0832               	movf	USART_Init@BaudRate+3,w
   575  019F  00B6               	movwf	??_USART_Init+3
   576  01A0  3004               	movlw	4
   577  01A1                     u345:	
   578  01A1  1003               	clrc
   579  01A2  0DB3               	rlf	??_USART_Init,f
   580  01A3  0DB4               	rlf	??_USART_Init+1,f
   581  01A4  0DB5               	rlf	??_USART_Init+2,f
   582  01A5  0DB6               	rlf	??_USART_Init+3,f
   583  01A6  3EFF               	addlw	-1
   584  01A7  1D03               	skipz
   585  01A8  29A1               	goto	u345
   586  01A9  0836               	movf	??_USART_Init+3,w
   587  01AA  00A3               	movwf	___aldiv@divisor+3
   588  01AB  0835               	movf	??_USART_Init+2,w
   589  01AC  00A2               	movwf	___aldiv@divisor+2
   590  01AD  0834               	movf	??_USART_Init+1,w
   591  01AE  00A1               	movwf	___aldiv@divisor+1
   592  01AF  0833               	movf	??_USART_Init,w
   593  01B0  00A0               	movwf	___aldiv@divisor
   594  01B1  3001               	movlw	1
   595  01B2  00A7               	movwf	___aldiv@dividend+3
   596  01B3  3019               	movlw	25
   597  01B4  00A6               	movwf	___aldiv@dividend+2
   598  01B5  3040               	movlw	64
   599  01B6  00A5               	movwf	___aldiv@dividend+1
   600  01B7  3000               	movlw	0
   601  01B8  00A4               	movwf	___aldiv@dividend
   602  01B9  120A  118A  20B9   	fcall	___aldiv
   603  01BC  1283               	bcf	3,5	;RP0=0, select bank0
   604  01BD  1303               	bcf	3,6	;RP1=0, select bank0
   605  01BE  0820               	movf	?___aldiv,w
   606  01BF  3EFF               	addlw	255
   607  01C0  00B7               	movwf	??_USART_Init+4
   608  01C1  0837               	movf	??_USART_Init+4,w
   609  01C2  00B8               	movwf	USART_Init@BR
   610                           
   611                           ;Supervisorio.c: 44: SPBRG = BR;
   612  01C3  0838               	movf	USART_Init@BR,w
   613  01C4  1683               	bsf	3,5	;RP0=1, select bank1
   614  01C5  1303               	bcf	3,6	;RP1=0, select bank1
   615  01C6  0099               	movwf	25	;volatile
   616                           
   617                           ;Supervisorio.c: 47: TXSTAbits.CSRC = 0;
   618  01C7  1398               	bcf	24,7	;volatile
   619                           
   620                           ;Supervisorio.c: 48: TXSTAbits.TX9 = 0;
   621  01C8  1318               	bcf	24,6	;volatile
   622                           
   623                           ;Supervisorio.c: 49: TXSTAbits.TXEN = 1;
   624  01C9  1698               	bsf	24,5	;volatile
   625                           
   626                           ;Supervisorio.c: 50: TXSTAbits.SYNC = 0;
   627  01CA  1218               	bcf	24,4	;volatile
   628                           
   629                           ;Supervisorio.c: 51: TXSTAbits.BRGH = 1;
   630  01CB  1518               	bsf	24,2	;volatile
   631                           
   632                           ;Supervisorio.c: 52: TXSTAbits.TRMT = 1;
   633  01CC  1498               	bsf	24,1	;volatile
   634                           
   635                           ;Supervisorio.c: 53: TXSTAbits.TX9D = 0;
   636  01CD  1018               	bcf	24,0	;volatile
   637                           
   638                           ;Supervisorio.c: 56: RCSTAbits.SPEN = 1;
   639  01CE  1283               	bcf	3,5	;RP0=0, select bank0
   640  01CF  1303               	bcf	3,6	;RP1=0, select bank0
   641  01D0  1798               	bsf	24,7	;volatile
   642                           
   643                           ;Supervisorio.c: 57: RCSTAbits.RX9 = 0;
   644  01D1  1318               	bcf	24,6	;volatile
   645                           
   646                           ;Supervisorio.c: 58: RCSTAbits.SREN = 0;
   647  01D2  1298               	bcf	24,5	;volatile
   648                           
   649                           ;Supervisorio.c: 59: RCSTAbits.CREN = 1;
   650  01D3  1618               	bsf	24,4	;volatile
   651                           
   652                           ;Supervisorio.c: 60: RCSTAbits.ADDEN = 0;
   653  01D4  1198               	bcf	24,3	;volatile
   654                           
   655                           ;Supervisorio.c: 61: RCSTAbits.FERR = 0;
   656  01D5  1118               	bcf	24,2	;volatile
   657                           
   658                           ;Supervisorio.c: 62: RCSTAbits.OERR = 0;
   659  01D6  1098               	bcf	24,1	;volatile
   660                           
   661                           ;Supervisorio.c: 63: RCSTAbits.RX9D = 0;
   662  01D7  1018               	bcf	24,0	;volatile
   663                           
   664                           ;Supervisorio.c: 66: PIE1bits.RCIE = 1;
   665  01D8  1683               	bsf	3,5	;RP0=1, select bank1
   666  01D9  1303               	bcf	3,6	;RP1=0, select bank1
   667  01DA  168C               	bsf	12,5	;volatile
   668                           
   669                           ;Supervisorio.c: 67: PIR1bits.RCIF = 0;
   670  01DB  1283               	bcf	3,5	;RP0=0, select bank0
   671  01DC  1303               	bcf	3,6	;RP1=0, select bank0
   672  01DD  128C               	bcf	12,5	;volatile
   673  01DE  0008               	return
   674  01DF                     __end_of_USART_Init:	
   675                           
   676                           	psect	text2
   677  00B9                     __ptext2:	
   678 ;; *************** function ___aldiv *****************
   679 ;; Defined at:
   680 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;  divisor         4    0[BANK0 ] long 
   683 ;;  dividend        4    4[BANK0 ] long 
   684 ;; Auto vars:     Size  Location     Type
   685 ;;  quotient        4   11[BANK0 ] long 
   686 ;;  sign            1   10[BANK0 ] unsigned char 
   687 ;;  counter         1    9[BANK0 ] unsigned char 
   688 ;; Return value:  Size  Location     Type
   689 ;;                  4    0[BANK0 ] long 
   690 ;; Registers used:
   691 ;;		wreg, status,2, status,0
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   697 ;;      Params:         0       8       0       0       0
   698 ;;      Locals:         0       6       0       0       0
   699 ;;      Temps:          0       1       0       0       0
   700 ;;      Totals:         0      15       0       0       0
   701 ;;Total ram usage:       15 bytes
   702 ;; Hardware stack levels used:    1
   703 ;; Hardware stack levels required when called:    4
   704 ;; This function calls:
   705 ;;		Nothing
   706 ;; This function is called by:
   707 ;;		_USART_Init
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           
   712                           ;psect for function ___aldiv
   713  00B9                     ___aldiv:	
   714                           
   715                           ;incstack = 0
   716                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   717  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   718  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   719  00BB  01AA               	clrf	___aldiv@sign
   720  00BC  1FA3               	btfss	___aldiv@divisor+3,7
   721  00BD  28CB               	goto	l267
   722  00BE  09A0               	comf	___aldiv@divisor,f
   723  00BF  09A1               	comf	___aldiv@divisor+1,f
   724  00C0  09A2               	comf	___aldiv@divisor+2,f
   725  00C1  09A3               	comf	___aldiv@divisor+3,f
   726  00C2  0AA0               	incf	___aldiv@divisor,f
   727  00C3  1903               	skipnz
   728  00C4  0AA1               	incf	___aldiv@divisor+1,f
   729  00C5  1903               	skipnz
   730  00C6  0AA2               	incf	___aldiv@divisor+2,f
   731  00C7  1903               	skipnz
   732  00C8  0AA3               	incf	___aldiv@divisor+3,f
   733  00C9  01AA               	clrf	___aldiv@sign
   734  00CA  0AAA               	incf	___aldiv@sign,f
   735  00CB                     l267:	
   736  00CB  1FA7               	btfss	___aldiv@dividend+3,7
   737  00CC  28DC               	goto	l815
   738  00CD  09A4               	comf	___aldiv@dividend,f
   739  00CE  09A5               	comf	___aldiv@dividend+1,f
   740  00CF  09A6               	comf	___aldiv@dividend+2,f
   741  00D0  09A7               	comf	___aldiv@dividend+3,f
   742  00D1  0AA4               	incf	___aldiv@dividend,f
   743  00D2  1903               	skipnz
   744  00D3  0AA5               	incf	___aldiv@dividend+1,f
   745  00D4  1903               	skipnz
   746  00D5  0AA6               	incf	___aldiv@dividend+2,f
   747  00D6  1903               	skipnz
   748  00D7  0AA7               	incf	___aldiv@dividend+3,f
   749  00D8  3001               	movlw	1
   750  00D9  00A8               	movwf	??___aldiv
   751  00DA  0828               	movf	??___aldiv,w
   752  00DB  06AA               	xorwf	___aldiv@sign,f
   753  00DC                     l815:	
   754  00DC  3000               	movlw	0
   755  00DD  00AE               	movwf	___aldiv@quotient+3
   756  00DE  3000               	movlw	0
   757  00DF  00AD               	movwf	___aldiv@quotient+2
   758  00E0  3000               	movlw	0
   759  00E1  00AC               	movwf	___aldiv@quotient+1
   760  00E2  3000               	movlw	0
   761  00E3  00AB               	movwf	___aldiv@quotient
   762  00E4  0823               	movf	___aldiv@divisor+3,w
   763  00E5  0422               	iorwf	___aldiv@divisor+2,w
   764  00E6  0421               	iorwf	___aldiv@divisor+1,w
   765  00E7  0420               	iorwf	___aldiv@divisor,w
   766  00E8  1903               	skipnz
   767  00E9  2931               	goto	l837
   768  00EA  01A9               	clrf	___aldiv@counter
   769  00EB  0AA9               	incf	___aldiv@counter,f
   770  00EC                     l823:	
   771  00EC  1BA3               	btfsc	___aldiv@divisor+3,7
   772  00ED  28FC               	goto	l825
   773  00EE  3001               	movlw	1
   774  00EF  00A8               	movwf	??___aldiv
   775  00F0                     u275:	
   776  00F0  1003               	clrc
   777  00F1  0DA0               	rlf	___aldiv@divisor,f
   778  00F2  0DA1               	rlf	___aldiv@divisor+1,f
   779  00F3  0DA2               	rlf	___aldiv@divisor+2,f
   780  00F4  0DA3               	rlf	___aldiv@divisor+3,f
   781  00F5  0BA8               	decfsz	??___aldiv,f
   782  00F6  28F0               	goto	u275
   783  00F7  3001               	movlw	1
   784  00F8  00A8               	movwf	??___aldiv
   785  00F9  0828               	movf	??___aldiv,w
   786  00FA  07A9               	addwf	___aldiv@counter,f
   787  00FB  28EC               	goto	l823
   788  00FC                     l825:	
   789  00FC  3001               	movlw	1
   790  00FD  00A8               	movwf	??___aldiv
   791  00FE                     u295:	
   792  00FE  1003               	clrc
   793  00FF  0DAB               	rlf	___aldiv@quotient,f
   794  0100  0DAC               	rlf	___aldiv@quotient+1,f
   795  0101  0DAD               	rlf	___aldiv@quotient+2,f
   796  0102  0DAE               	rlf	___aldiv@quotient+3,f
   797  0103  0BA8               	decfsz	??___aldiv,f
   798  0104  28FE               	goto	u295
   799  0105  0823               	movf	___aldiv@divisor+3,w
   800  0106  0227               	subwf	___aldiv@dividend+3,w
   801  0107  1D03               	skipz
   802  0108  2913               	goto	u305
   803  0109  0822               	movf	___aldiv@divisor+2,w
   804  010A  0226               	subwf	___aldiv@dividend+2,w
   805  010B  1D03               	skipz
   806  010C  2913               	goto	u305
   807  010D  0821               	movf	___aldiv@divisor+1,w
   808  010E  0225               	subwf	___aldiv@dividend+1,w
   809  010F  1D03               	skipz
   810  0110  2913               	goto	u305
   811  0111  0820               	movf	___aldiv@divisor,w
   812  0112  0224               	subwf	___aldiv@dividend,w
   813  0113                     u305:	
   814  0113  1C03               	skipc
   815  0114  2924               	goto	l833
   816  0115  0820               	movf	___aldiv@divisor,w
   817  0116  02A4               	subwf	___aldiv@dividend,f
   818  0117  0821               	movf	___aldiv@divisor+1,w
   819  0118  1C03               	skipc
   820  0119  0F21               	incfsz	___aldiv@divisor+1,w
   821  011A  02A5               	subwf	___aldiv@dividend+1,f
   822  011B  0822               	movf	___aldiv@divisor+2,w
   823  011C  1C03               	skipc
   824  011D  0F22               	incfsz	___aldiv@divisor+2,w
   825  011E  02A6               	subwf	___aldiv@dividend+2,f
   826  011F  0823               	movf	___aldiv@divisor+3,w
   827  0120  1C03               	skipc
   828  0121  0F23               	incfsz	___aldiv@divisor+3,w
   829  0122  02A7               	subwf	___aldiv@dividend+3,f
   830  0123  142B               	bsf	___aldiv@quotient,0
   831  0124                     l833:	
   832  0124  3001               	movlw	1
   833  0125                     u315:	
   834  0125  1003               	clrc
   835  0126  0CA3               	rrf	___aldiv@divisor+3,f
   836  0127  0CA2               	rrf	___aldiv@divisor+2,f
   837  0128  0CA1               	rrf	___aldiv@divisor+1,f
   838  0129  0CA0               	rrf	___aldiv@divisor,f
   839  012A  3EFF               	addlw	-1
   840  012B  1D03               	skipz
   841  012C  2925               	goto	u315
   842  012D  3001               	movlw	1
   843  012E  02A9               	subwf	___aldiv@counter,f
   844  012F  1D03               	btfss	3,2
   845  0130  28FC               	goto	l825
   846  0131                     l837:	
   847  0131  082A               	movf	___aldiv@sign,w
   848  0132  1903               	btfsc	3,2
   849  0133  293F               	goto	l841
   850  0134  09AB               	comf	___aldiv@quotient,f
   851  0135  09AC               	comf	___aldiv@quotient+1,f
   852  0136  09AD               	comf	___aldiv@quotient+2,f
   853  0137  09AE               	comf	___aldiv@quotient+3,f
   854  0138  0AAB               	incf	___aldiv@quotient,f
   855  0139  1903               	skipnz
   856  013A  0AAC               	incf	___aldiv@quotient+1,f
   857  013B  1903               	skipnz
   858  013C  0AAD               	incf	___aldiv@quotient+2,f
   859  013D  1903               	skipnz
   860  013E  0AAE               	incf	___aldiv@quotient+3,f
   861  013F                     l841:	
   862  013F  082E               	movf	___aldiv@quotient+3,w
   863  0140  00A3               	movwf	?___aldiv+3
   864  0141  082D               	movf	___aldiv@quotient+2,w
   865  0142  00A2               	movwf	?___aldiv+2
   866  0143  082C               	movf	___aldiv@quotient+1,w
   867  0144  00A1               	movwf	?___aldiv+1
   868  0145  082B               	movf	___aldiv@quotient,w
   869  0146  00A0               	movwf	?___aldiv
   870  0147  0008               	return
   871  0148                     __end_of___aldiv:	
   872                           
   873                           	psect	text3
   874  028E                     __ptext3:	
   875 ;; *************** function _TIMER1_Init *****************
   876 ;; Defined at:
   877 ;;		line 147 in file "C:\Users\Dracarys\Documents\GitHub\SistemaEmbarcado_projeto_final\SistemasEmbarcados\Firmware no P
      +IC16F877A\Supervisorio.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;		None               void
   884 ;; Registers used:
   885 ;;		None
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   891 ;;      Params:         0       0       0       0       0
   892 ;;      Locals:         0       0       0       0       0
   893 ;;      Temps:          0       0       0       0       0
   894 ;;      Totals:         0       0       0       0       0
   895 ;;Total ram usage:        0 bytes
   896 ;; Hardware stack levels used:    1
   897 ;; Hardware stack levels required when called:    4
   898 ;; This function calls:
   899 ;;		Nothing
   900 ;; This function is called by:
   901 ;;		_main
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           
   906                           ;psect for function _TIMER1_Init
   907  028E                     _TIMER1_Init:	
   908                           
   909                           ;Supervisorio.c: 149: T1CONbits.TMR1CS = 0;
   910                           
   911                           ;incstack = 0
   912                           ; Regs used in _TIMER1_Init: []
   913  028E  1283               	bcf	3,5	;RP0=0, select bank0
   914  028F  1303               	bcf	3,6	;RP1=0, select bank0
   915  0290  1090               	bcf	16,1	;volatile
   916                           
   917                           ;Supervisorio.c: 150: T1CONbits.T1OSCEN = 0;
   918  0291  1190               	bcf	16,3	;volatile
   919                           
   920                           ;Supervisorio.c: 151: T1CONbits.T1CKPS1 = 1;
   921  0292  1690               	bsf	16,5	;volatile
   922                           
   923                           ;Supervisorio.c: 152: T1CONbits.T1CKPS0 = 1;
   924  0293  1610               	bsf	16,4	;volatile
   925                           
   926                           ;Supervisorio.c: 154: T1CONbits.TMR1ON = 1;
   927  0294  1410               	bsf	16,0	;volatile
   928                           
   929                           ;Supervisorio.c: 155: TMR1 = 7936;
   930  0295  301F               	movlw	31
   931  0296  008F               	movwf	15	;volatile
   932  0297  3000               	movlw	0
   933  0298  008E               	movwf	14	;volatile
   934                           
   935                           ;Supervisorio.c: 157: PIR1bits.TMR1IF = 0;
   936  0299  100C               	bcf	12,0	;volatile
   937                           
   938                           ;Supervisorio.c: 158: PIE1bits.TMR1IE = 1;
   939  029A  1683               	bsf	3,5	;RP0=1, select bank1
   940  029B  1303               	bcf	3,6	;RP1=0, select bank1
   941  029C  140C               	bsf	12,0	;volatile
   942  029D  0008               	return
   943  029E                     __end_of_TIMER1_Init:	
   944                           
   945                           	psect	text4
   946  027C                     __ptext4:	
   947 ;; *************** function _ADC_Init *****************
   948 ;; Defined at:
   949 ;;		line 114 in file "C:\Users\Dracarys\Documents\GitHub\SistemaEmbarcado_projeto_final\SistemasEmbarcados\Firmware no P
      +IC16F877A\Supervisorio.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;		None               void
   956 ;; Registers used:
   957 ;;		None
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   963 ;;      Params:         0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0
   966 ;;      Totals:         0       0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    4
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_main
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           
   978                           ;psect for function _ADC_Init
   979  027C                     _ADC_Init:	
   980                           
   981                           ;Supervisorio.c: 117: ADCON1bits.ADFM = 1;
   982                           
   983                           ;incstack = 0
   984                           ; Regs used in _ADC_Init: []
   985  027C  1683               	bsf	3,5	;RP0=1, select bank1
   986  027D  1303               	bcf	3,6	;RP1=0, select bank1
   987  027E  179F               	bsf	31,7	;volatile
   988                           
   989                           ;Supervisorio.c: 118: ADCON1bits.PCFG3 = 1;
   990  027F  159F               	bsf	31,3	;volatile
   991                           
   992                           ;Supervisorio.c: 119: ADCON1bits.PCFG2 = 1;
   993  0280  151F               	bsf	31,2	;volatile
   994                           
   995                           ;Supervisorio.c: 120: ADCON1bits.PCFG1 = 1;
   996  0281  149F               	bsf	31,1	;volatile
   997                           
   998                           ;Supervisorio.c: 121: ADCON1bits.PCFG0 = 0;
   999  0282  101F               	bcf	31,0	;volatile
  1000                           
  1001                           ;Supervisorio.c: 125: ADCON0bits.ADCS1 = 1;
  1002  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1003  0284  1303               	bcf	3,6	;RP1=0, select bank0
  1004  0285  179F               	bsf	31,7	;volatile
  1005                           
  1006                           ;Supervisorio.c: 126: ADCON0bits.ADCS0 = 0;
  1007  0286  131F               	bcf	31,6	;volatile
  1008                           
  1009                           ;Supervisorio.c: 129: PIE1bits.ADIE = 0;
  1010  0287  1683               	bsf	3,5	;RP0=1, select bank1
  1011  0288  1303               	bcf	3,6	;RP1=0, select bank1
  1012  0289  130C               	bcf	12,6	;volatile
  1013                           
  1014                           ;Supervisorio.c: 130: PIR1bits.ADIF = 0;
  1015  028A  1283               	bcf	3,5	;RP0=0, select bank0
  1016  028B  1303               	bcf	3,6	;RP1=0, select bank0
  1017  028C  130C               	bcf	12,6	;volatile
  1018  028D  0008               	return
  1019  028E                     __end_of_ADC_Init:	
  1020                           
  1021                           	psect	text5
  1022  0028                     __ptext5:	
  1023 ;; *************** function _ISR *****************
  1024 ;; Defined at:
  1025 ;;		line 163 in file "C:\Users\Dracarys\Documents\GitHub\SistemaEmbarcado_projeto_final\SistemasEmbarcados\Firmware no P
      +IC16F877A\Supervisorio.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;  index           1   11[COMMON] unsigned char 
  1030 ;;  checksum        1   10[COMMON] unsigned char 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;		None               void
  1033 ;; Registers used:
  1034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1040 ;;      Params:         0       0       0       0       0
  1041 ;;      Locals:         2       0       0       0       0
  1042 ;;      Temps:          5       0       0       0       0
  1043 ;;      Totals:         7       0       0       0       0
  1044 ;;Total ram usage:        7 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; Hardware stack levels required when called:    3
  1047 ;; This function calls:
  1048 ;;		_ADC_Read
  1049 ;;		_USART_ReceiveChar
  1050 ;;		_USART_WriteChar
  1051 ;; This function is called by:
  1052 ;;		Interrupt level 1
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           
  1057                           ;psect for function _ISR
  1058  0028                     _ISR:	
  1059                           
  1060                           ;Supervisorio.c: 168: if(PIR1bits.TMR1IF)
  1061  0028  1C0C               	btfss	12,0	;volatile
  1062  0029  283C               	goto	i1l933
  1063                           
  1064                           ;Supervisorio.c: 169: {
  1065                           ;Supervisorio.c: 170: TMR1 = 7936;
  1066  002A  301F               	movlw	31
  1067  002B  008F               	movwf	15	;volatile
  1068  002C  3000               	movlw	0
  1069  002D  008E               	movwf	14	;volatile
  1070                           
  1071                           ;Supervisorio.c: 171: if(cont1 == 10)
  1072  002E  300A               	movlw	10
  1073  002F  064D               	xorwf	_cont1,w
  1074  0030  044E               	iorwf	_cont1+1,w
  1075  0031  1D03               	skipz
  1076  0032  283B               	goto	i1l931
  1077                           
  1078                           ;Supervisorio.c: 172: {
  1079                           ;Supervisorio.c: 173: sec++;
  1080  0033  3001               	movlw	1
  1081  0034  07CF               	addwf	_sec,f
  1082  0035  1803               	skipnc
  1083  0036  0AD0               	incf	_sec+1,f
  1084  0037  3000               	movlw	0
  1085  0038  07D0               	addwf	_sec+1,f
  1086                           
  1087                           ;Supervisorio.c: 174: cont1 = 0;
  1088  0039  01CD               	clrf	_cont1
  1089  003A  01CE               	clrf	_cont1+1
  1090  003B                     i1l931:	
  1091                           
  1092                           ;Supervisorio.c: 176: }
  1093                           ;Supervisorio.c: 177: PIR1bits.TMR1IF = 0;
  1094  003B  100C               	bcf	12,0	;volatile
  1095  003C                     i1l933:	
  1096                           
  1097                           ;Supervisorio.c: 178: }
  1098                           ;Supervisorio.c: 181: if (PIR1bits.ADIF)
  1099  003C  1B0C               	btfsc	12,6	;volatile
  1100                           
  1101                           ;Supervisorio.c: 182: {
  1102                           ;Supervisorio.c: 184: PIR1bits.ADIF = 0;
  1103  003D  130C               	bcf	12,6	;volatile
  1104                           
  1105                           ;Supervisorio.c: 185: }
  1106                           ;Supervisorio.c: 188: if (PIR1bits.RCIF)
  1107  003E  1E8C               	btfss	12,5	;volatile
  1108  003F  28AE               	goto	i1l122
  1109                           
  1110                           ;Supervisorio.c: 189: {
  1111                           ;Supervisorio.c: 190: resp = USART_ReceiveChar();
  1112  0040  120A  118A  224A  120A  118A  	fcall	_USART_ReceiveChar
  1113  0045  00F5               	movwf	??_ISR
  1114  0046  0875               	movf	??_ISR,w
  1115  0047  1283               	bcf	3,5	;RP0=0, select bank0
  1116  0048  1303               	bcf	3,6	;RP1=0, select bank0
  1117  0049  00D4               	movwf	_resp
  1118                           
  1119                           ;Supervisorio.c: 193: switch(resp)
  1120  004A  28A9               	goto	i1l975
  1121  004B                     i1l939:	
  1122                           ;Supervisorio.c: 194: {
  1123                           ;Supervisorio.c: 195: case 'A' :
  1124                           
  1125                           
  1126                           ;Supervisorio.c: 197: buffer[0] = '#';
  1127  004B  3023               	movlw	35
  1128  004C  00F5               	movwf	??_ISR
  1129  004D  0875               	movf	??_ISR,w
  1130  004E  00BC               	movwf	_buffer
  1131                           
  1132                           ;Supervisorio.c: 198: buffer[1] = '$';
  1133  004F  3024               	movlw	36
  1134  0050  00F5               	movwf	??_ISR
  1135  0051  0875               	movf	??_ISR,w
  1136  0052  00BD               	movwf	_buffer+1
  1137                           
  1138                           ;Supervisorio.c: 199: buffer[2] = ':';
  1139  0053  303A               	movlw	58
  1140  0054  00F5               	movwf	??_ISR
  1141  0055  0875               	movf	??_ISR,w
  1142  0056  00BE               	movwf	_buffer+2
  1143                           
  1144                           ;Supervisorio.c: 201: ADC_Read(0);
  1145  0057  3000               	movlw	0
  1146  0058  00F0               	movwf	ADC_Read@channel
  1147  0059  3000               	movlw	0
  1148  005A  00F1               	movwf	ADC_Read@channel+1
  1149  005B  120A  118A  2264  120A  118A  	fcall	_ADC_Read
  1150                           
  1151                           ;Supervisorio.c: 202: HIGH = ADRESH;
  1152  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1154  0062  081E               	movf	30,w	;volatile
  1155  0063  00F5               	movwf	??_ISR
  1156  0064  0875               	movf	??_ISR,w
  1157  0065  00FC               	movwf	_HIGH
  1158                           
  1159                           ;Supervisorio.c: 203: LOW = ADRESL;
  1160  0066  1683               	bsf	3,5	;RP0=1, select bank1
  1161  0067  1303               	bcf	3,6	;RP1=0, select bank1
  1162  0068  081E               	movf	30,w	;volatile
  1163  0069  00F5               	movwf	??_ISR
  1164  006A  0875               	movf	??_ISR,w
  1165  006B  00FD               	movwf	_LOW
  1166                           
  1167                           ;Supervisorio.c: 205: buffer[3] = HIGH;
  1168  006C  087C               	movf	_HIGH,w
  1169  006D  00F5               	movwf	??_ISR
  1170  006E  0875               	movf	??_ISR,w
  1171  006F  1283               	bcf	3,5	;RP0=0, select bank0
  1172  0070  1303               	bcf	3,6	;RP1=0, select bank0
  1173  0071  00BF               	movwf	_buffer+3
  1174                           
  1175                           ;Supervisorio.c: 206: buffer[4] = LOW;
  1176  0072  087D               	movf	_LOW,w
  1177  0073  00F5               	movwf	??_ISR
  1178  0074  0875               	movf	??_ISR,w
  1179  0075  00C0               	movwf	_buffer+4
  1180                           
  1181                           ;Supervisorio.c: 208: unsigned char checksum = 0x00;
  1182  0076  01FA               	clrf	ISR@checksum
  1183                           
  1184                           ;Supervisorio.c: 209: for(unsigned char index = 0; index < 5; index++)
  1185  0077  01FB               	clrf	ISR@index
  1186  0078  3005               	movlw	5
  1187  0079  027B               	subwf	ISR@index,w
  1188  007A  1803               	btfsc	3,0
  1189  007B  2896               	goto	i1l967
  1190  007C                     i1l959:	
  1191                           
  1192                           ;Supervisorio.c: 210: {
  1193                           ;Supervisorio.c: 211: USART_WriteChar(buffer[index]);
  1194  007C  087B               	movf	ISR@index,w
  1195  007D  3E3C               	addlw	_buffer& (0+255)
  1196  007E  0084               	movwf	4
  1197  007F  1383               	bcf	3,7	;select IRP bank0
  1198  0080  0800               	movf	0,w
  1199  0081  120A  118A  22A6  120A  118A  	fcall	_USART_WriteChar
  1200                           
  1201                           ;Supervisorio.c: 212: checksum ^= buffer[index];
  1202  0086  087B               	movf	ISR@index,w
  1203  0087  3E3C               	addlw	_buffer& (0+255)
  1204  0088  0084               	movwf	4
  1205  0089  1383               	bcf	3,7	;select IRP bank0
  1206  008A  0800               	movf	0,w
  1207  008B  00F5               	movwf	??_ISR
  1208  008C  0875               	movf	??_ISR,w
  1209  008D  06FA               	xorwf	ISR@checksum,f
  1210  008E  3001               	movlw	1
  1211  008F  00F5               	movwf	??_ISR
  1212  0090  0875               	movf	??_ISR,w
  1213  0091  07FB               	addwf	ISR@index,f
  1214  0092  3005               	movlw	5
  1215  0093  027B               	subwf	ISR@index,w
  1216  0094  1C03               	skipc
  1217  0095  287C               	goto	i1l959
  1218  0096                     i1l967:	
  1219                           
  1220                           ;Supervisorio.c: 213: }
  1221                           ;Supervisorio.c: 214: buffer[5] = checksum;
  1222  0096  087A               	movf	ISR@checksum,w
  1223  0097  00F5               	movwf	??_ISR
  1224  0098  0875               	movf	??_ISR,w
  1225  0099  1283               	bcf	3,5	;RP0=0, select bank0
  1226  009A  1303               	bcf	3,6	;RP1=0, select bank0
  1227  009B  00C1               	movwf	_buffer+5
  1228                           
  1229                           ;Supervisorio.c: 215: USART_WriteChar(buffer[5]);
  1230  009C  0841               	movf	_buffer+5,w
  1231  009D  120A  118A  22A6  120A  118A  	fcall	_USART_WriteChar
  1232                           
  1233                           ;Supervisorio.c: 217: resp = '#';
  1234  00A2  3023               	movlw	35
  1235  00A3  00F5               	movwf	??_ISR
  1236  00A4  0875               	movf	??_ISR,w
  1237  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1238  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1239  00A7  00D4               	movwf	_resp
  1240                           
  1241                           ;Supervisorio.c: 219: }
  1242                           
  1243                           ;Supervisorio.c: 218: break;
  1244  00A8  28AE               	goto	i1l122
  1245  00A9                     i1l975:	
  1246  00A9  0854               	movf	_resp,w
  1247                           
  1248                           ; Switch size 1, requested type "space"
  1249                           ; Number of cases is 1, Range of values is 65 to 65
  1250                           ; switch strategies available:
  1251                           ; Name         Instructions Cycles
  1252                           ; simple_byte            4     3 (average)
  1253                           ; direct_byte           14    11 (fixed)
  1254                           ; jumptable            263     9 (fixed)
  1255                           ;	Chosen strategy is simple_byte
  1256  00AA  3A41               	xorlw	65	; case 65
  1257  00AB  1903               	skipnz
  1258  00AC  284B               	goto	i1l939
  1259  00AD  28AE               	goto	i1l122
  1260  00AE                     i1l122:	
  1261  00AE  0879               	movf	??_ISR+4,w
  1262  00AF  00FF               	movwf	127
  1263  00B0  0878               	movf	??_ISR+3,w
  1264  00B1  008A               	movwf	10
  1265  00B2  0877               	movf	??_ISR+2,w
  1266  00B3  0084               	movwf	4
  1267  00B4  0E76               	swapf	(??_ISR+1)^(0+-128),w
  1268  00B5  0083               	movwf	3
  1269  00B6  0EFE               	swapf	126,f
  1270  00B7  0E7E               	swapf	126,w
  1271  00B8  0009               	retfie
  1272  00B9                     __end_of_ISR:	
  1273                           
  1274                           	psect	intentry
  1275  0004                     __pintentry:	
  1276                           ;incstack = 0
  1277                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1278                           
  1279  0004                     interrupt_function:	
  1280  007E                     saved_w	set	btemp
  1281  0004  00FE               	movwf	btemp
  1282  0005  0E03               	swapf	3,w
  1283  0006  00F6               	movwf	??_ISR+1
  1284  0007  0804               	movf	4,w
  1285  0008  00F7               	movwf	??_ISR+2
  1286  0009  080A               	movf	10,w
  1287  000A  00F8               	movwf	??_ISR+3
  1288  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1289  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1290  000D  087F               	movf	btemp+1,w
  1291  000E  00F9               	movwf	??_ISR+4
  1292  000F  120A  118A  2828   	ljmp	_ISR
  1293                           
  1294                           	psect	text6
  1295  024A                     __ptext6:	
  1296 ;; *************** function _USART_ReceiveChar *****************
  1297 ;; Defined at:
  1298 ;;		line 90 in file "C:\Users\Dracarys\Documents\GitHub\SistemaEmbarcado_projeto_final\SistemasEmbarcados\Firmware no PI
      +C16F877A\Supervisorio.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  USART_Data      1    4[COMMON] unsigned char 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      unsigned char 
  1305 ;; Registers used:
  1306 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1312 ;;      Params:         0       0       0       0       0
  1313 ;;      Locals:         1       0       0       0       0
  1314 ;;      Temps:          1       0       0       0       0
  1315 ;;      Totals:         2       0       0       0       0
  1316 ;;Total ram usage:        2 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    2
  1319 ;; This function calls:
  1320 ;;		_USART_WriteString
  1321 ;; This function is called by:
  1322 ;;		_ISR
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           
  1327                           ;psect for function _USART_ReceiveChar
  1328  024A                     _USART_ReceiveChar:	
  1329                           
  1330                           ;Supervisorio.c: 92: unsigned char USART_Data;
  1331                           ;Supervisorio.c: 94: if (!OERR)
  1332                           
  1333                           ;incstack = 0
  1334                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1335  024A  1283               	bcf	3,5	;RP0=0, select bank0
  1336  024B  1303               	bcf	3,6	;RP1=0, select bank0
  1337  024C  1898               	btfsc	24,1	;volatile
  1338  024D  2A55               	goto	i1l895
  1339                           
  1340                           ;Supervisorio.c: 95: {
  1341                           ;Supervisorio.c: 96: PORTBbits.RB4 = 1;
  1342  024E  1606               	bsf	6,4	;volatile
  1343                           
  1344                           ;Supervisorio.c: 97: USART_Data = RCREG;
  1345  024F  081A               	movf	26,w	;volatile
  1346  0250  00F3               	movwf	??_USART_ReceiveChar
  1347  0251  0873               	movf	??_USART_ReceiveChar,w
  1348  0252  00F4               	movwf	USART_ReceiveChar@USART_Data
  1349                           
  1350                           ;Supervisorio.c: 98: PORTBbits.RB4 = 0;
  1351  0253  1206               	bcf	6,4	;volatile
  1352  0254  2A61               	goto	i1l903
  1353  0255                     i1l895:	
  1354                           ;Supervisorio.c: 100: }
  1355                           
  1356                           ;Supervisorio.c: 99: PIR1bits.RCIF = 0;
  1357                           
  1358                           
  1359                           ;Supervisorio.c: 101: else
  1360                           ;Supervisorio.c: 102: {
  1361                           ;Supervisorio.c: 103: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  1362  0255  3001               	movlw	(STR_1-__stringbase)& (0+255)
  1363  0256  120A  118A  222E   	fcall	_USART_WriteString
  1364                           
  1365                           ;Supervisorio.c: 105: RCSTAbits.CREN = 0;
  1366  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1367  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1368  025B  1218               	bcf	24,4	;volatile
  1369                           
  1370                           ;Supervisorio.c: 106: USART_Data = RCREG;
  1371  025C  081A               	movf	26,w	;volatile
  1372  025D  00F3               	movwf	??_USART_ReceiveChar
  1373  025E  0873               	movf	??_USART_ReceiveChar,w
  1374  025F  00F4               	movwf	USART_ReceiveChar@USART_Data
  1375                           
  1376                           ;Supervisorio.c: 107: RCSTAbits.CREN = 1;
  1377  0260  1618               	bsf	24,4	;volatile
  1378  0261                     i1l903:	
  1379                           
  1380                           ;Supervisorio.c: 108: PIR1bits.RCIF = 0;
  1381  0261  128C               	bcf	12,5	;volatile
  1382                           
  1383                           ;Supervisorio.c: 109: }
  1384                           ;Supervisorio.c: 111: return(USART_Data);
  1385  0262  0874               	movf	USART_ReceiveChar@USART_Data,w
  1386  0263  0008               	return
  1387  0264                     __end_of_USART_ReceiveChar:	
  1388                           
  1389                           	psect	text7
  1390  022E                     __ptext7:	
  1391 ;; *************** function _USART_WriteString *****************
  1392 ;; Defined at:
  1393 ;;		line 78 in file "C:\Users\Dracarys\Documents\GitHub\SistemaEmbarcado_projeto_final\SistemasEmbarcados\Firmware no PI
      +C16F877A\Supervisorio.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  str             1    wreg     PTR const unsigned char 
  1396 ;;		 -> STR_1(40), 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  str             1    2[COMMON] PTR const unsigned char 
  1399 ;;		 -> STR_1(40), 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;		None               void
  1402 ;; Registers used:
  1403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1409 ;;      Params:         0       0       0       0       0
  1410 ;;      Locals:         1       0       0       0       0
  1411 ;;      Temps:          1       0       0       0       0
  1412 ;;      Totals:         2       0       0       0       0
  1413 ;;Total ram usage:        2 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    1
  1416 ;; This function calls:
  1417 ;;		_USART_WriteChar
  1418 ;; This function is called by:
  1419 ;;		_USART_ReceiveChar
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           
  1424                           ;psect for function _USART_WriteString
  1425  022E                     _USART_WriteString:	
  1426                           
  1427                           ;incstack = 0
  1428                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1429                           ;USART_WriteString@str stored from wreg
  1430  022E  00F2               	movwf	USART_WriteString@str
  1431  022F                     i1l803:	
  1432                           ;Supervisorio.c: 81: while(*str != '\0')
  1433                           
  1434  022F  0872               	movf	USART_WriteString@str,w
  1435  0230  0084               	movwf	4
  1436  0231  120A  118A  2200  120A  118A  	fcall	stringdir
  1437  0236  3800               	iorlw	0
  1438  0237  1903               	btfsc	3,2
  1439  0238  0008               	return
  1440                           
  1441                           ;Supervisorio.c: 82: {
  1442                           ;Supervisorio.c: 84: USART_WriteChar(*str);
  1443  0239  0872               	movf	USART_WriteString@str,w
  1444  023A  0084               	movwf	4
  1445  023B  120A  118A  2200  120A  118A  	fcall	stringdir
  1446  0240  120A  118A  22A6  120A  118A  	fcall	_USART_WriteChar
  1447                           
  1448                           ;Supervisorio.c: 85: str++;
  1449  0245  3001               	movlw	1
  1450  0246  00F1               	movwf	??_USART_WriteString
  1451  0247  0871               	movf	??_USART_WriteString,w
  1452  0248  07F2               	addwf	USART_WriteString@str,f
  1453  0249  2A2F               	goto	i1l803
  1454  024A                     __end_of_USART_WriteString:	
  1455                           
  1456                           	psect	text8
  1457  02A6                     __ptext8:	
  1458 ;; *************** function _USART_WriteChar *****************
  1459 ;; Defined at:
  1460 ;;		line 71 in file "C:\Users\Dracarys\Documents\GitHub\SistemaEmbarcado_projeto_final\SistemasEmbarcados\Firmware no PI
      +C16F877A\Supervisorio.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;  USARTData       1    wreg     unsigned char 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;  USARTData       1    0[COMMON] unsigned char 
  1465 ;; Return value:  Size  Location     Type
  1466 ;;		None               void
  1467 ;; Registers used:
  1468 ;;		wreg
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1474 ;;      Params:         0       0       0       0       0
  1475 ;;      Locals:         1       0       0       0       0
  1476 ;;      Temps:          0       0       0       0       0
  1477 ;;      Totals:         1       0       0       0       0
  1478 ;;Total ram usage:        1 bytes
  1479 ;; Hardware stack levels used:    1
  1480 ;; This function calls:
  1481 ;;		Nothing
  1482 ;; This function is called by:
  1483 ;;		_USART_WriteString
  1484 ;;		_ISR
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           
  1489                           ;psect for function _USART_WriteChar
  1490  02A6                     _USART_WriteChar:	
  1491                           
  1492                           ;incstack = 0
  1493                           ; Regs used in _USART_WriteChar: [wreg]
  1494                           ;USART_WriteChar@USARTData stored from wreg
  1495  02A6  00F0               	movwf	USART_WriteChar@USARTData
  1496  02A7                     i1l84:	
  1497                           ;Supervisorio.c: 73: while(!PIR1bits.TXIF);
  1498                           
  1499  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1500  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  1501  02A9  1E0C               	btfss	12,4	;volatile
  1502  02AA  2AA7               	goto	i1l84
  1503                           
  1504                           ;Supervisorio.c: 74: TXREG = USARTData;
  1505  02AB  0870               	movf	USART_WriteChar@USARTData,w
  1506  02AC  0099               	movwf	25	;volatile
  1507  02AD  0008               	return
  1508  02AE                     __end_of_USART_WriteChar:	
  1509                           
  1510                           	psect	text9
  1511  0264                     __ptext9:	
  1512 ;; *************** function _ADC_Read *****************
  1513 ;; Defined at:
  1514 ;;		line 133 in file "C:\Users\Dracarys\Documents\GitHub\SistemaEmbarcado_projeto_final\SistemasEmbarcados\Firmware no P
      +IC16F877A\Supervisorio.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  channel         2    0[COMMON] unsigned short 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;		None
  1519 ;; Return value:  Size  Location     Type
  1520 ;;		None               void
  1521 ;; Registers used:
  1522 ;;		wreg, status,2, status,0
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1528 ;;      Params:         2       0       0       0       0
  1529 ;;      Locals:         0       0       0       0       0
  1530 ;;      Temps:          1       0       0       0       0
  1531 ;;      Totals:         3       0       0       0       0
  1532 ;;Total ram usage:        3 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; This function calls:
  1535 ;;		Nothing
  1536 ;; This function is called by:
  1537 ;;		_ISR
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           
  1542                           ;psect for function _ADC_Read
  1543  0264                     _ADC_Read:	
  1544                           
  1545                           ;Supervisorio.c: 135: ADCON0bits.CHS = channel;
  1546                           
  1547                           ;incstack = 0
  1548                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  1549  0264  0870               	movf	ADC_Read@channel,w
  1550  0265  00F2               	movwf	??_ADC_Read
  1551  0266  0DF2               	rlf	??_ADC_Read,f
  1552  0267  0DF2               	rlf	??_ADC_Read,f
  1553  0268  0DF2               	rlf	??_ADC_Read,f
  1554  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1555  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1556  026B  081F               	movf	31,w	;volatile
  1557  026C  0672               	xorwf	??_ADC_Read,w
  1558  026D  39C7               	andlw	-57
  1559  026E  0672               	xorwf	??_ADC_Read,w
  1560  026F  009F               	movwf	31	;volatile
  1561                           
  1562                           ;Supervisorio.c: 136: ADCON0bits.ADON = 1;
  1563  0270  141F               	bsf	31,0	;volatile
  1564                           
  1565                           ;Supervisorio.c: 138: _delay((unsigned long)((25)*(18432000/4000000.0)));
  1566  0271  3026               	movlw	38
  1567  0272  00F2               	movwf	??_ADC_Read
  1568  0273                     u44_27:	
  1569  0273  0BF2               	decfsz	??_ADC_Read,f
  1570  0274  2A73               	goto	u44_27
  1571                           
  1572                           ;Supervisorio.c: 140: ADCON0bits.GO = 1;
  1573  0275  1283               	bcf	3,5	;RP0=0, select bank0
  1574  0276  1303               	bcf	3,6	;RP1=0, select bank0
  1575  0277  151F               	bsf	31,2	;volatile
  1576  0278                     i1l104:	
  1577                           ;Supervisorio.c: 141: while(ADCON0bits.GO_DONE);
  1578                           
  1579  0278  191F               	btfsc	31,2	;volatile
  1580  0279  2A78               	goto	i1l104
  1581                           
  1582                           ;Supervisorio.c: 143: PIR1bits.ADIF = 0;
  1583  027A  130C               	bcf	12,6	;volatile
  1584  027B  0008               	return
  1585  027C                     __end_of_ADC_Read:	
  1586  007E                     btemp	set	126	;btemp
  1587  007E                     wtemp	set	126
  1588  007E                     wtemp0	set	126
  1589  0080                     wtemp1	set	128
  1590  0082                     wtemp2	set	130
  1591  0084                     wtemp3	set	132
  1592  0086                     wtemp4	set	134
  1593  0088                     wtemp5	set	136
  1594  007F                     wtemp6	set	127
  1595  007E                     ttemp	set	126
  1596  007E                     ttemp0	set	126
  1597  0081                     ttemp1	set	129
  1598  0084                     ttemp2	set	132
  1599  0087                     ttemp3	set	135
  1600  007F                     ttemp4	set	127
  1601  007E                     ltemp	set	126
  1602  007E                     ltemp0	set	126
  1603  0082                     ltemp1	set	130
  1604  0086                     ltemp2	set	134
  1605  0080                     ltemp3	set	128


Data Sizes:
    Strings     40
    Constant    0
    Data        1
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     28      53
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Display	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_USART_ReceiveChar
    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar

Critical Paths under _main in BANK0

    _main->_USART_Init
    _USART_Init->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     538
                                             25 BANK0      3     3      0
                           _ADC_Init
                        _TIMER1_Init
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          10     6      4     538
                                             15 BANK0     10     6      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  7     7      0     343
                                              5 COMMON     7     7      0
                           _ADC_Read
                  _USART_ReceiveChar
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     121
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (5) _USART_WriteString                                    2     2      0      97
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (4) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ADC_Read                                             3     1      2      86
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _TIMER1_Init
   _USART_Init
     ___aldiv

 _ISR (ROOT)
   _ADC_Read
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   _USART_WriteChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1C      35       5       66.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      43      12        0.0%
ABS                  0      0      43       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed May 13 13:31:03 2020

                          pc 0002                  __CFG_CP$OFF 0000                           fsr 0004  
                        l125 0194                          l267 00CB                          l823 00EC  
                        l815 00DC                          l841 013F                          l833 0124  
                        l825 00FC                          l837 0131                          u305 0113  
                        u315 0125                          u345 01A1                 __CFG_CPD$OFF 0000  
                        u275 00F0                          _ISR 0028                          u437 0188  
                        u295 00FE                          _LOW 007D                          _sec 004F  
                        fsr0 0004   __size_of_USART_WriteString 001C                          indf 0000  
               __CFG_FOSC$HS 0000                 __CFG_LVP$OFF 0000                         ?_ISR 0070  
                       STR_1 0206                         _HIGH 007C                         i1l84 02A7  
                       _OERR 00C1                         _TMR1 000E                         _main 0148  
                       _resp 0054                         btemp 007E             __end_of_ADC_Init 028E  
           __end_of_ADC_Read 027C                         ltemp 007E                         start 0012  
                       ttemp 007E                         wtemp 007E      __end_of_USART_WriteChar 02AE  
                      ??_ISR 0075              __end_of___aldiv 0148                        ?_main 0070  
              __CFG_WDTE$OFF 0000                        i1l104 0278                        i1l122 00AE  
                      i1l803 022F                        i1l903 0261                        i1l931 003B  
                      i1l933 003C                        i1l939 004B                        i1l895 0255  
                      i1l967 0096                        i1l959 007C                        i1l975 00A9  
                      _RCREG 001A                        _SPBRG 0099                        _PORTA 0005  
                      _PORTB 0006                        _PORTC 0007                        _PORTD 0008  
                      _PORTE 0009                        u44_27 0273                        _TRISA 0085  
                      _TRISB 0086                        _TRISC 0087                        _TRISD 0088  
                      _TRISE 0089                        _TXREG 0019                __CFG_PWRTE$ON 0000  
               USART_Init@BR 0038                        _cont1 004D                        _ativa 004B  
                      _input 0046               __CFG_BOREN$OFF 0000                        pclath 000A  
                      ltemp0 007E                        ltemp1 0082                        ltemp2 0086  
                      ltemp3 0080                        ttemp0 007E                        ttemp1 0081  
                      ttemp2 0084                        ttemp3 0087                        ttemp4 007F  
                      status 0003                        wtemp0 007E                        wtemp1 0080  
                      wtemp2 0082                        wtemp3 0084                        wtemp4 0086  
                      wtemp5 0088                        wtemp6 007F                  ?_USART_Init 002F  
            __initialization 0015                 __end_of_main 0195                       ??_main 0039  
               ?_TIMER1_Init 0070     USART_WriteChar@USARTData 0070                       _ADRESH 001E  
                     _ADRESL 009E                    ??___aldiv 0028             ?_USART_WriteChar 0070  
                     _buffer 003C              ADC_Read@channel 0070                       _status 0051  
                  ?_ADC_Init 0070                    ?_ADC_Read 0070                       saved_w 007E  
        __size_of_USART_Init 004A      __end_of__initialization 0024               __pcstackCOMMON 0070  
                ISR@checksum 007A                 __pidataBANK0 02AE                   ??_ADC_Init 0020  
                 ??_ADC_Read 0072                   __pbssBANK0 003C                   __pmaintext 0148  
                 __pintentry 0004         __size_of_TIMER1_Init 0010                   __stringtab 0200  
                    _Display 0053                    _ADCResult 0049                 ??_USART_Init 0033  
                    ___aldiv 00B9                      __ptext1 0195                      __ptext2 00B9  
                    __ptext3 028E                      __ptext4 027C                      __ptext5 0028  
                    __ptext6 024A                      __ptext7 022E                      __ptext8 02A6  
                    __ptext9 0264                 __size_of_ISR 0091                    _T1CONbits 0010  
           ___aldiv@dividend 0024  USART_ReceiveChar@USART_Data 0074           __end_of_USART_Init 01DF  
                    clrloop0 029F         end_of_initialization 0024                    _RCSTAbits 0018  
           ___aldiv@quotient 002B                    _PORTBbits 0006            __size_of_ADC_Init 0012  
          __size_of_ADC_Read 0018                    _TXSTAbits 0098     __size_of_USART_WriteChar 0008  
        start_initialization 0015                  __end_of_ISR 00B9            _USART_ReceiveChar 024A  
         ?_USART_ReceiveChar 0070                  __pdataBANK0 0054          ??_USART_ReceiveChar 0073  
                __pbssCOMMON 007C                    ___latbits 0002                __pcstackBANK0 0020  
        __end_of__stringdata 022E    __end_of_USART_ReceiveChar 0264                     ISR@index 007B  
                   ?___aldiv 0020                    __pstrings 0200                ??_TIMER1_Init 0020  
         USART_Init@BaudRate 002F                     _ADC_Init 027C                     _ADC_Read 0264  
          ??_USART_WriteChar 0070              ___aldiv@divisor 0020            interrupt_function 0004  
            ___aldiv@counter 0029                    clear_ram0 029E                     _PIE1bits 008C  
                   _PIR1bits 000C                   _ADCON0bits 001F                  __stringbase 0205  
                 _ADCON1bits 009F                  __stringdata 0206          __end_of_TIMER1_Init 029E  
                 _ADC_Buffer 0042   __size_of_USART_ReceiveChar 001A             __size_of___aldiv 008F  
         __end_of__stringtab 0206            _USART_WriteString 022E           ?_USART_WriteString 0070  
              __size_of_main 004D          ??_USART_WriteString 0071                  _TIMER1_Init 028E  
                 _INTCONbits 000B    __end_of_USART_WriteString 024A                     intlevel1 0000  
                  stringcode 0200         USART_WriteString@str 0072              _USART_WriteChar 02A6  
                   stringdir 0200                     stringtab 0200                 ___aldiv@sign 002A  
                 _USART_Init 0195  
